package guestbook;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.ui.Model;
// import org.springframework.web.bind.annotation.RequestMapping;
// import org.springframework.web.bind.annotation.ResponseStatus;
// import org.springframework.web.bind.annotation.GetMapping;
// import org.springframework.web.bind.annotation.PostMapping;
// import org.springframework.web.bind.annotation.RequestParam;
// import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.http.HttpStatus;

import guestbook.User;
import guestbook.UserRepository;

@Controller    // This means that this class is a Controller
// @RequestMapping(path="/") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	// @GetMapping(path="/add") // Map ONLY GET Requests
	// public @ResponseBody String addNewUser (@RequestParam String name
	// 		, @RequestParam String email, @RequestParam String phoneNumber) {
	// 	// @ResponseBody means the returned String is the response, not a view name
	// 	// @RequestParam means it is a parameter from the GET or POST request
  //
	// 	User n = new User();
	// 	n.setName(name);
	// 	n.setEmail(email);
	// 	n.setPhoneNumber(phoneNumber);
	// 	userRepository.save(n);
	// 	return "Saved";
	// }

  // @GetMapping("/")
  // public String index() {
  //   return "index.html";
  // }

  @GetMapping("/")
  public String guestbookForm(Model model) {
      model.addAttribute("user", new User());
      return "user";
  }

  // @RequestMapping(value="/add", method = RequestMethod.POST)
  // @ResponseStatus(value = HttpStatus.OK)
  // public String index (@RequestParam String name
  //   , @RequestParam String email, @RequestParam String phoneNumber) {
  // 		// @ResponseBody means the returned String is the response, not a view name
  // 		// @RequestParam means it is a parameter from the GET or POST request
  //
  // 		User n = new User();
  // 		n.setName(name);
  // 		n.setEmail(email);
  // 		n.setPhoneNumber(phoneNumber);
  // 		userRepository.save(n);
  //
  //     return "index.html";
  // }

  @PostMapping("/")
  public String userSubmit(@ModelAttribute User user) {
    return "result";
  }

	// @PostMapping(path="/add")
	// public @ResponseBody String addNewUser (@RequestParam String name
	// 		, @RequestParam String email, @RequestParam String phoneNumber) {
	// 	// @ResponseBody means the returned String is the response, not a view name
	// 	// @RequestParam means it is a parameter from the GET or POST request
  //
	// 	User n = new User();
	// 	n.setName(name);
	// 	n.setEmail(email);
	// 	n.setPhoneNumber(phoneNumber);
	// 	userRepository.save(n);
	// 	return out;
	// }

	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
